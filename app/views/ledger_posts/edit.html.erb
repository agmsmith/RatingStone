<% provide(:page_title, 'Edit Post')
  provide(:button_text, 'Save Changes')
  points_available = current_ledger_user.points_available
  points_used = LedgerBase::DEFAULT_SPEND_FOR_OBJECT

  # Will need the label style this user prefers, for several things.
  label_style = current_user&.fancy_labels
  label_style = 0 if label_style.nil? || label_style < 0
  label_style = 2 if label_style > 2
  umd_selection_menu = [
    [ApplicationHelper::DIRECTION_LABELS["U"][label_style], "U"],
    [ApplicationHelper::DIRECTION_LABELS["M"][label_style], "M"],
    [ApplicationHelper::DIRECTION_LABELS["D"][label_style], "D"],
  ]

  LedgerFullGroup.name # FUTURE: Force load of LedgerSubgroup subclasses.
%>
<h1>Editing <%= @ledger_object.base_s %></h1>

<%= form_with(model: @ledger_object, scope: :ledger_post_fields,
  # Use URL without ID for new records, with ID for editing existing record.
  url: @ledger_object.id.nil? ? ledger_posts_path : ledger_post_path,
  method: :patch, local: true, class: "form-group") do |f| %>
  <div class="row">
    <div class="col-xs-12">
      <%= render 'shared/error_messages', object: f.object %>
      <%= f.label :subject %>
      <%= f.text_field :subject, class: 'form-control' %><br>
      <%= f.label :content %>
      <%= f.text_area :content, class: 'form-control', cols: 80, rows: 10 %>
      <div class="post-text-content-form">
        <%= f.submit "Update Preview", name: "preview",
          class: "btn btn-primary float-right" %>
        <%= Kramdown::Document.new(@ledger_object.content)
          .to_html.html_safe -%>
      </div>
      <%= f.label :summary_of_changes %>
      <%= f.text_field :summary_of_changes, class: 'form-control' %>
    </div>

    <div class="col-xs-12 col-sm-6 col-lg-4">
      <H2>Additional Groups</H2>
      <p>Add your post to these groups.  Note that they may need to approve it
        too (at some later time), depending on the group's rules and whether
        you are a member of the group.</p>
      <ul>
        <%= fields_for :new_groups do |group_fields| %>
          <% @ledger_object.new_groups.each_with_index do |group_item,
              group_index| %>
            <li>
              <% group_id = group_item[:ID].to_i
                a_group = LedgerSubgroup.find_by(id: group_id)
                if a_group
                  group_name = a_group.to_s
                  points_used += group_item[:Points]
                elsif group_id > 0
                  group_name = "Unknown (#{group_id})"
                else
                  group_name = ""
                end %>
              <%= # Using the index as part of the field name so we can have
                # several related input fields in new_groups{}.
                group_fields.text_field "#{group_index}_ID",
                  value: group_item[:ID], class: 'form-control' %>
              <strong><%= group_name %></strong>
              <%= group_fields.select "#{group_index}_UMD",
                umd_selection_menu, selected: group_item[:UMD],
                class: 'form-control' %>
              <%= group_fields.text_field "#{group_index}_Points",
                value: group_item[:Points], class: 'form-control' %>
            </li>
          <% end %>
        <% end %>
      </ul>
    </div>

    <div class="col-xs-12 col-sm-6 col-lg-4">
      <H2>Additional Reply-Tos</H2>
      <p>In case you think your post is a good reply to some other existing
        posts, you can add them here!</p>
      <ul>
        <%= fields_for :new_replytos do |replyto_fields| %>
          <% @ledger_object.new_replytos.each_with_index do |replyto_item,
              replyto_index| %>
            <li>
              <% replyto_id = replyto_item[:ID].to_i
                a_post = LedgerPost.find_by(id: replyto_id)
                if a_post
                  replyto_name = a_post.to_s
                  points_used += replyto_item[:Points]
                elsif replyto_id > 0
                  replyto_name = "Unknown (#{replyto_id})"
                else
                  replyto_name = ""
                end %>
              <%= # Using the index as part of the field name so we can have
                # several related input fields in new_replytos{}.
                replyto_fields.text_field "#{replyto_index}_ID",
                  value: replyto_item[:ID], class: 'form-control' %>
              <strong><%= replyto_name %></strong>
              <%= replyto_fields.select "#{replyto_index}_UMD",
                umd_selection_menu, selected: replyto_item[:UMD],
                class: 'form-control' %>
              <%= replyto_fields.text_field "#{replyto_index}_Points",
                value: replyto_item[:Points], class: 'form-control' %>
            </li>
          <% end %>
        <% end %>
      </ul>
    </div>

    <div class="col-xs-12 col-sm-6 col-lg-4">
      <H2>Additional Quotes</H2>
      <p>In case you want your post to quote some other one, you can add them
        here!</p>
      <ul>
        <%= fields_for :new_quotes do |quote_fields| %>
          <% @ledger_object.new_quotes.each_with_index do |quote_item,
              quote_index| %>
            <li>
              <% quote_id = quote_item[:ID].to_i
                a_post = LedgerPost.find_by(id: quote_id)
                if a_post
                  quote_name = a_post.to_s
                  points_used += quote_item[:Points]
                elsif quote_id > 0
                  quote_name = "Unknown (#{quote_id})"
                else
                  quote_name = ""
                end %>
              <%= # Using the index as part of the field name so we can have
                # several related input fields in new_quotes{}.
                quote_fields.text_field "#{quote_index}_ID",
                  value: quote_item[:ID], class: 'form-control' %>
              <strong><%= quote_name %></strong>
              <%= quote_fields.select "#{quote_index}_UMD",
                umd_selection_menu, selected: quote_item[:UMD],
                class: 'form-control' %>
              <%= quote_fields.text_field "#{quote_index}_Points",
                value: quote_item[:Points], class: 'form-control' %>
            </li>
          <% end %>
        <% end %>
      </ul>
    </div>

    <div class="col-xs-12">
      <H2>Would use <%=
        "#{format("%.2f", points_used)} #{'point'.pluralize(points_used)}"
        %>, leaving <%= remaining = points_available - points_used
        "#{format("%.2f", remaining)} #{'point'.pluralize(remaining)}"
        %>.</H2>
      <% if remaining >= 0.0 %>
        <%= f.submit yield(:button_text),
          class: "btn btn-primary button-full-width" %>
      <% else %>
        Out of Points, can't Save!
      <% end %>
    </div>
  </div>
<% end %>

